//
//  {{ module_info.name | capitalize }} module - {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import XCoordinator
import Swinject
import RxSwift

enum {{ module_info.name | capitalize }}Route: Route {
    case {{ module_info.name | downcase }}
}

class {{ module_info.name | capitalize }}Coordinator: NavigationCoordinator<{{ module_info.name | capitalize }}Route> {

    let bag = DisposeBag()
    
    /// Modules required in this coordinator
    let assembler = Assembler([
        {{ module_info.name | capitalize }}ModuleAssembly(),
    ])
    
    init() {
        super.init(initialRoute: .{{ module_info.name | downcase }})
    }
    
    override func prepareTransition(for route: {{ module_info.name | capitalize }}Route) -> NavigationTransition {
        guard let module = assembler.resolver.resolve({{ module_info.name | capitalize }}Module.self) else { return .none() }
        let input = module.input
        let output = module.output
        
        return .push(module.view)
    }
}
